From f4d6b4022fc3122471f0d39aeb58abafc9412a10 Mon Sep 17 00:00:00 2001
From: cpmw167 <cpmw167@nowhere>
Date: Mon, 6 Jan 2020 18:16:11 +0000
Subject: [PATCH] [bluray] fix playback of bus encryption enabled discs

When AACS protected Blu-ray discs are opened using bd_open_files(),
libbluray doesn't call aacs_decrypt_bus(). Bus Encryption Enabled (BEE)
Blu-ray discs must to be opened using bd_open_disc() instead, otherwise
Bus Encryption doesn't get handled properly.

Not handling Bus Encryption will make playback fail when following
conditions are met:
1) drive is Bus Encryption Capable (BEC) and
2) disc enables it (BEE).

Fix this by opening all AACS protected Blu-ray discs with bd_open_disc().
---
 xbmc/FileItem.cpp                             | 10 +++++++
 xbmc/FileItem.h                               |  1 +
 .../DVDInputStreams/DVDInputStreamBluray.cpp  | 30 ++++++++++++++++++-
 3 files changed, 40 insertions(+), 1 deletion(-)

diff --git a/xbmc/FileItem.cpp b/xbmc/FileItem.cpp
index 34cf1cae2605..fb321252f89a 100644
--- a/xbmc/FileItem.cpp
+++ b/xbmc/FileItem.cpp
@@ -1200,6 +1200,16 @@ bool CFileItem::IsBluray() const
   return item.IsBDFile();
 }
 
+bool CFileItem::IsProtectedBlurayDisc() const
+{
+  std::string path;
+  path = URIUtils::AddFileToFolder(GetPath(), "AACS", "Unit_Key_RO.inf");
+  if (CFile::Exists(path))
+    return true;
+
+  return false;
+}
+
 bool CFileItem::IsCDDA() const
 {
   return URIUtils::IsCDDA(m_strPath);
diff --git a/xbmc/FileItem.h b/xbmc/FileItem.h
index 643f7caf39e1..bad4b4b7cd70 100644
--- a/xbmc/FileItem.h
+++ b/xbmc/FileItem.h
@@ -209,6 +209,7 @@ class CFileItem :
   bool IsDVDFile(bool bVobs = true, bool bIfos = true) const;
   bool IsBDFile() const;
   bool IsBluray() const;
+  bool IsProtectedBlurayDisc() const;
   bool IsRAR() const;
   bool IsAPK() const;
   bool IsZIP() const;
diff --git a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.cpp b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.cpp
index 72a73d1f53d6..6c94a76315ee 100644
--- a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.cpp
+++ b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.cpp
@@ -139,6 +139,7 @@ bool CDVDInputStreamBluray::Open()
   std::string root;
 
   bool openStream = false;
+  bool openDisc = false;
 
   // The item was selected via the simple menu
   if (URIUtils::IsProtocol(strPath, "bluray"))
@@ -147,6 +148,11 @@ bool CDVDInputStreamBluray::Open()
     root = url.GetHostName();
     filename = URIUtils::GetFileName(url.GetFileName());
 
+    // Check whether disc is AACS protected
+    CURL url3(root);
+    CFileItem base(url3, false);
+    openDisc = base.IsProtectedBlurayDisc();
+
     // check for a menu call for an image file
     if (StringUtils::EqualsNoCase(filename, "menu"))
     {
@@ -155,6 +161,11 @@ bool CDVDInputStreamBluray::Open()
       std::string root2 = url2.GetHostName();
       CURL url(root2);
       CFileItem item(url, false);
+
+      // Check whether disc is AACS protected
+      if (!openDisc)
+        openDisc = item.IsProtectedBlurayDisc();
+
       if (item.IsDiscImage())
       {
         if (!OpenStream(item))
@@ -171,6 +182,10 @@ bool CDVDInputStreamBluray::Open()
 
     openStream = true;
   }
+  else if (m_item.IsProtectedBlurayDisc())
+  {
+    openDisc = true;
+  }
   else
   {
     strPath = URIUtils::GetDirectory(strPath);
@@ -217,12 +232,25 @@ bool CDVDInputStreamBluray::Open()
       return false;
     }
   }
+  else if (openDisc)
+  {
+    // This special case is required for opening original AACS protected Blu-ray discs. Otherwise
+    // things like Bus Encryption might not be handled properly and playback will fail.
+    m_rootPath = root;
+    if (!bd_open_disc(m_bd, root.c_str(), nullptr))
+    {
+      CLog::Log(LOGERROR, "CDVDInputStreamBluray::Open - failed to open %s in disc mode",
+                CURL::GetRedacted(root).c_str());
+      return false;
+    }
+  }
   else
   {
     m_rootPath = root;
     if (!bd_open_files(m_bd, &m_rootPath, CBlurayCallback::dir_open, CBlurayCallback::file_open))
     {
-      CLog::Log(LOGERROR, "CDVDInputStreamBluray::Open - failed to open %s", CURL::GetRedacted(root).c_str());
+      CLog::Log(LOGERROR, "CDVDInputStreamBluray::Open - failed to open %s in files mode",
+                CURL::GetRedacted(root).c_str());
       return false;
     }
   }
